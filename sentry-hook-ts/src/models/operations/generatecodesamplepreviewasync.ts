/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Job accepted, returns a job ID to poll for status and result
 */
export type GenerateCodeSamplePreviewAsyncResponse = {
  /**
   * The job ID for polling
   */
  jobId: string;
  /**
   * The current status of the job. Possible values are `pending` or `running`.
   */
  status: components.CodeSamplesJobStatus;
};

/** @internal */
export const GenerateCodeSamplePreviewAsyncResponse$inboundSchema: z.ZodType<
  GenerateCodeSamplePreviewAsyncResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  job_id: z.string(),
  status: components.CodeSamplesJobStatus$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "job_id": "jobId",
  });
});

/** @internal */
export type GenerateCodeSamplePreviewAsyncResponse$Outbound = {
  job_id: string;
  status: string;
};

/** @internal */
export const GenerateCodeSamplePreviewAsyncResponse$outboundSchema: z.ZodType<
  GenerateCodeSamplePreviewAsyncResponse$Outbound,
  z.ZodTypeDef,
  GenerateCodeSamplePreviewAsyncResponse
> = z.object({
  jobId: z.string(),
  status: components.CodeSamplesJobStatus$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    jobId: "job_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateCodeSamplePreviewAsyncResponse$ {
  /** @deprecated use `GenerateCodeSamplePreviewAsyncResponse$inboundSchema` instead. */
  export const inboundSchema =
    GenerateCodeSamplePreviewAsyncResponse$inboundSchema;
  /** @deprecated use `GenerateCodeSamplePreviewAsyncResponse$outboundSchema` instead. */
  export const outboundSchema =
    GenerateCodeSamplePreviewAsyncResponse$outboundSchema;
  /** @deprecated use `GenerateCodeSamplePreviewAsyncResponse$Outbound` instead. */
  export type Outbound = GenerateCodeSamplePreviewAsyncResponse$Outbound;
}

export function generateCodeSamplePreviewAsyncResponseToJSON(
  generateCodeSamplePreviewAsyncResponse:
    GenerateCodeSamplePreviewAsyncResponse,
): string {
  return JSON.stringify(
    GenerateCodeSamplePreviewAsyncResponse$outboundSchema.parse(
      generateCodeSamplePreviewAsyncResponse,
    ),
  );
}

export function generateCodeSamplePreviewAsyncResponseFromJSON(
  jsonString: string,
): SafeParseResult<GenerateCodeSamplePreviewAsyncResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GenerateCodeSamplePreviewAsyncResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GenerateCodeSamplePreviewAsyncResponse' from JSON`,
  );
}
