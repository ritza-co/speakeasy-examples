/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { createTodo } from "../funcs/createTodo.js";
import { deleteTodo } from "../funcs/deleteTodo.js";
import { getTodoById } from "../funcs/getTodoById.js";
import { getTodos } from "../funcs/getTodos.js";
import { updateTodo } from "../funcs/updateTodo.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AcmeTodoApi extends ClientSDK {
  /**
   * Get a todo item by id
   */
  async getTodoById(
    request: operations.GetTodoByIdRequest,
    options?: RequestOptions,
  ): Promise<components.Todo> {
    return unwrapAsync(getTodoById(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a todo item
   */
  async updateTodo(
    request: operations.UpdateTodoRequest,
    options?: RequestOptions,
  ): Promise<components.Todo> {
    return unwrapAsync(updateTodo(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a todo item
   */
  async deleteTodo(
    request: operations.DeleteTodoRequest,
    options?: RequestOptions,
  ): Promise<components.Todo> {
    return unwrapAsync(deleteTodo(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a todo item
   */
  async createTodo(
    request?: components.CreateTodoRequest | undefined,
    options?: RequestOptions,
  ): Promise<components.Todo> {
    return unwrapAsync(createTodo(
      this,
      request,
      options,
    ));
  }

  /**
   * Get all todo items
   */
  async getTodos(
    options?: RequestOptions,
  ): Promise<Array<components.Todo>> {
    return unwrapAsync(getTodos(
      this,
      options,
    ));
  }
}
