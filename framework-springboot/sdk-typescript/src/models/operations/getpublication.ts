/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetPublicationRequest = {
  /**
   * ID of the publication to retrieve
   */
  id: string;
};

export type GetPublicationMagazine = {};

export type GetPublicationMagazineUnion = GetPublicationMagazine | string;

export type GetPublicationBook = {};

export type GetPublicationBookUnion = GetPublicationBook | string;

/**
 * Successful operation
 */
export type GetPublicationResponseBody =
  | GetPublicationBook
  | string
  | GetPublicationMagazine
  | string;

/** @internal */
export const GetPublicationRequest$inboundSchema: z.ZodType<
  GetPublicationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetPublicationRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetPublicationRequest$outboundSchema: z.ZodType<
  GetPublicationRequest$Outbound,
  z.ZodTypeDef,
  GetPublicationRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPublicationRequest$ {
  /** @deprecated use `GetPublicationRequest$inboundSchema` instead. */
  export const inboundSchema = GetPublicationRequest$inboundSchema;
  /** @deprecated use `GetPublicationRequest$outboundSchema` instead. */
  export const outboundSchema = GetPublicationRequest$outboundSchema;
  /** @deprecated use `GetPublicationRequest$Outbound` instead. */
  export type Outbound = GetPublicationRequest$Outbound;
}

export function getPublicationRequestToJSON(
  getPublicationRequest: GetPublicationRequest,
): string {
  return JSON.stringify(
    GetPublicationRequest$outboundSchema.parse(getPublicationRequest),
  );
}

export function getPublicationRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetPublicationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPublicationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPublicationRequest' from JSON`,
  );
}

/** @internal */
export const GetPublicationMagazine$inboundSchema: z.ZodType<
  GetPublicationMagazine,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type GetPublicationMagazine$Outbound = {};

/** @internal */
export const GetPublicationMagazine$outboundSchema: z.ZodType<
  GetPublicationMagazine$Outbound,
  z.ZodTypeDef,
  GetPublicationMagazine
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPublicationMagazine$ {
  /** @deprecated use `GetPublicationMagazine$inboundSchema` instead. */
  export const inboundSchema = GetPublicationMagazine$inboundSchema;
  /** @deprecated use `GetPublicationMagazine$outboundSchema` instead. */
  export const outboundSchema = GetPublicationMagazine$outboundSchema;
  /** @deprecated use `GetPublicationMagazine$Outbound` instead. */
  export type Outbound = GetPublicationMagazine$Outbound;
}

export function getPublicationMagazineToJSON(
  getPublicationMagazine: GetPublicationMagazine,
): string {
  return JSON.stringify(
    GetPublicationMagazine$outboundSchema.parse(getPublicationMagazine),
  );
}

export function getPublicationMagazineFromJSON(
  jsonString: string,
): SafeParseResult<GetPublicationMagazine, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPublicationMagazine$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPublicationMagazine' from JSON`,
  );
}

/** @internal */
export const GetPublicationMagazineUnion$inboundSchema: z.ZodType<
  GetPublicationMagazineUnion,
  z.ZodTypeDef,
  unknown
> = z.union([z.lazy(() => GetPublicationMagazine$inboundSchema), z.string()]);

/** @internal */
export type GetPublicationMagazineUnion$Outbound =
  | GetPublicationMagazine$Outbound
  | string;

/** @internal */
export const GetPublicationMagazineUnion$outboundSchema: z.ZodType<
  GetPublicationMagazineUnion$Outbound,
  z.ZodTypeDef,
  GetPublicationMagazineUnion
> = z.union([z.lazy(() => GetPublicationMagazine$outboundSchema), z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPublicationMagazineUnion$ {
  /** @deprecated use `GetPublicationMagazineUnion$inboundSchema` instead. */
  export const inboundSchema = GetPublicationMagazineUnion$inboundSchema;
  /** @deprecated use `GetPublicationMagazineUnion$outboundSchema` instead. */
  export const outboundSchema = GetPublicationMagazineUnion$outboundSchema;
  /** @deprecated use `GetPublicationMagazineUnion$Outbound` instead. */
  export type Outbound = GetPublicationMagazineUnion$Outbound;
}

export function getPublicationMagazineUnionToJSON(
  getPublicationMagazineUnion: GetPublicationMagazineUnion,
): string {
  return JSON.stringify(
    GetPublicationMagazineUnion$outboundSchema.parse(
      getPublicationMagazineUnion,
    ),
  );
}

export function getPublicationMagazineUnionFromJSON(
  jsonString: string,
): SafeParseResult<GetPublicationMagazineUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPublicationMagazineUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPublicationMagazineUnion' from JSON`,
  );
}

/** @internal */
export const GetPublicationBook$inboundSchema: z.ZodType<
  GetPublicationBook,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type GetPublicationBook$Outbound = {};

/** @internal */
export const GetPublicationBook$outboundSchema: z.ZodType<
  GetPublicationBook$Outbound,
  z.ZodTypeDef,
  GetPublicationBook
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPublicationBook$ {
  /** @deprecated use `GetPublicationBook$inboundSchema` instead. */
  export const inboundSchema = GetPublicationBook$inboundSchema;
  /** @deprecated use `GetPublicationBook$outboundSchema` instead. */
  export const outboundSchema = GetPublicationBook$outboundSchema;
  /** @deprecated use `GetPublicationBook$Outbound` instead. */
  export type Outbound = GetPublicationBook$Outbound;
}

export function getPublicationBookToJSON(
  getPublicationBook: GetPublicationBook,
): string {
  return JSON.stringify(
    GetPublicationBook$outboundSchema.parse(getPublicationBook),
  );
}

export function getPublicationBookFromJSON(
  jsonString: string,
): SafeParseResult<GetPublicationBook, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPublicationBook$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPublicationBook' from JSON`,
  );
}

/** @internal */
export const GetPublicationBookUnion$inboundSchema: z.ZodType<
  GetPublicationBookUnion,
  z.ZodTypeDef,
  unknown
> = z.union([z.lazy(() => GetPublicationBook$inboundSchema), z.string()]);

/** @internal */
export type GetPublicationBookUnion$Outbound =
  | GetPublicationBook$Outbound
  | string;

/** @internal */
export const GetPublicationBookUnion$outboundSchema: z.ZodType<
  GetPublicationBookUnion$Outbound,
  z.ZodTypeDef,
  GetPublicationBookUnion
> = z.union([z.lazy(() => GetPublicationBook$outboundSchema), z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPublicationBookUnion$ {
  /** @deprecated use `GetPublicationBookUnion$inboundSchema` instead. */
  export const inboundSchema = GetPublicationBookUnion$inboundSchema;
  /** @deprecated use `GetPublicationBookUnion$outboundSchema` instead. */
  export const outboundSchema = GetPublicationBookUnion$outboundSchema;
  /** @deprecated use `GetPublicationBookUnion$Outbound` instead. */
  export type Outbound = GetPublicationBookUnion$Outbound;
}

export function getPublicationBookUnionToJSON(
  getPublicationBookUnion: GetPublicationBookUnion,
): string {
  return JSON.stringify(
    GetPublicationBookUnion$outboundSchema.parse(getPublicationBookUnion),
  );
}

export function getPublicationBookUnionFromJSON(
  jsonString: string,
): SafeParseResult<GetPublicationBookUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPublicationBookUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPublicationBookUnion' from JSON`,
  );
}

/** @internal */
export const GetPublicationResponseBody$inboundSchema: z.ZodType<
  GetPublicationResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.union([z.lazy(() => GetPublicationBook$inboundSchema), z.string()]),
  z.union([z.lazy(() => GetPublicationMagazine$inboundSchema), z.string()]),
]);

/** @internal */
export type GetPublicationResponseBody$Outbound =
  | GetPublicationBook$Outbound
  | string
  | GetPublicationMagazine$Outbound
  | string;

/** @internal */
export const GetPublicationResponseBody$outboundSchema: z.ZodType<
  GetPublicationResponseBody$Outbound,
  z.ZodTypeDef,
  GetPublicationResponseBody
> = z.union([
  z.union([z.lazy(() => GetPublicationBook$outboundSchema), z.string()]),
  z.union([z.lazy(() => GetPublicationMagazine$outboundSchema), z.string()]),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPublicationResponseBody$ {
  /** @deprecated use `GetPublicationResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetPublicationResponseBody$inboundSchema;
  /** @deprecated use `GetPublicationResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetPublicationResponseBody$outboundSchema;
  /** @deprecated use `GetPublicationResponseBody$Outbound` instead. */
  export type Outbound = GetPublicationResponseBody$Outbound;
}

export function getPublicationResponseBodyToJSON(
  getPublicationResponseBody: GetPublicationResponseBody,
): string {
  return JSON.stringify(
    GetPublicationResponseBody$outboundSchema.parse(getPublicationResponseBody),
  );
}

export function getPublicationResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetPublicationResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPublicationResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPublicationResponseBody' from JSON`,
  );
}
