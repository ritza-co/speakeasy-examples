/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { databasesCreate } from "../funcs/databasesCreate.js";
import { databasesDelete } from "../funcs/databasesDelete.js";
import { databasesGet } from "../funcs/databasesGet.js";
import { databasesList } from "../funcs/databasesList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Databases extends ClientSDK {
  /**
   * Lists all databases for a given tenant.
   */
  async list(
    request: operations.ListDatabasesRequest,
    options?: RequestOptions,
  ): Promise<Array<components.Vec>> {
    return unwrapAsync(databasesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Creates a new database for a given tenant.
   */
  async create(
    request: operations.CreateDatabaseRequest,
    options?: RequestOptions,
  ): Promise<components.CreateDatabaseResponse> {
    return unwrapAsync(databasesCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieves a specific database by name.
   */
  async get(
    request: operations.GetDatabaseRequest,
    options?: RequestOptions,
  ): Promise<components.Database> {
    return unwrapAsync(databasesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Deletes a specific database.
   */
  async delete(
    request: operations.DeleteDatabaseRequest,
    options?: RequestOptions,
  ): Promise<components.DeleteDatabaseResponse> {
    return unwrapAsync(databasesDelete(
      this,
      request,
      options,
    ));
  }
}
