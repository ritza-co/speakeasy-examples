// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Collection struct {
	// CollectionUuid is a wrapper around Uuid to provide a type for the collection id.
	CollectionID      string             `json:"collection_id"`
	ConfigurationJSON any                `json:"configuration_json,omitempty"`
	Database          string             `json:"database"`
	Dimension         *int               `json:"dimension,omitempty"`
	LogPosition       int64              `json:"log_position"`
	Metadata          map[string]HashMap `json:"metadata,omitempty"`
	Name              string             `json:"name"`
	Tenant            string             `json:"tenant"`
	Version           int                `json:"version"`
}

func (o *Collection) GetCollectionID() string {
	if o == nil {
		return ""
	}
	return o.CollectionID
}

func (o *Collection) GetConfigurationJSON() any {
	if o == nil {
		return nil
	}
	return o.ConfigurationJSON
}

func (o *Collection) GetDatabase() string {
	if o == nil {
		return ""
	}
	return o.Database
}

func (o *Collection) GetDimension() *int {
	if o == nil {
		return nil
	}
	return o.Dimension
}

func (o *Collection) GetLogPosition() int64 {
	if o == nil {
		return 0
	}
	return o.LogPosition
}

func (o *Collection) GetMetadata() map[string]HashMap {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *Collection) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Collection) GetTenant() string {
	if o == nil {
		return ""
	}
	return o.Tenant
}

func (o *Collection) GetVersion() int {
	if o == nil {
		return 0
	}
	return o.Version
}
