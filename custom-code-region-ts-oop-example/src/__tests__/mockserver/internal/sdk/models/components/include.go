// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type Include string

const (
	IncludeDistances  Include = "distances"
	IncludeDocuments  Include = "documents"
	IncludeEmbeddings Include = "embeddings"
	IncludeMetadatas  Include = "metadatas"
	IncludeUris       Include = "uris"
)

func (e Include) ToPointer() *Include {
	return &e
}
func (e *Include) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "distances":
		fallthrough
	case "documents":
		fallthrough
	case "embeddings":
		fallthrough
	case "metadatas":
		fallthrough
	case "uris":
		*e = Include(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Include: %v", v)
	}
}
