// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListDatabasesGlobals struct {
	TenantID *string `pathParam:"style=simple,explode=false,name=tenant_id"`
}

func (o *ListDatabasesGlobals) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

type ListDatabasesRequest struct {
	// Tenant ID to list databases for
	TenantID *string `pathParam:"style=simple,explode=false,name=tenant_id"`
	// Limit for pagination
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Offset for pagination
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
}

func (o *ListDatabasesRequest) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *ListDatabasesRequest) GetLimit() *int {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListDatabasesRequest) GetOffset() *int {
	if o == nil {
		return nil
	}
	return o.Offset
}

type ListDatabasesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// List of databases
	Vec []components.Vec
}

func (o *ListDatabasesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListDatabasesResponse) GetVec() []components.Vec {
	if o == nil {
		return nil
	}
	return o.Vec
}
