// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListCollectionsGlobals struct {
	TenantID     *string `pathParam:"style=simple,explode=false,name=tenant_id"`
	DatabaseName *string `pathParam:"style=simple,explode=false,name=database_name"`
}

func (o *ListCollectionsGlobals) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *ListCollectionsGlobals) GetDatabaseName() *string {
	if o == nil {
		return nil
	}
	return o.DatabaseName
}

type ListCollectionsRequest struct {
	// Tenant ID
	TenantID *string `pathParam:"style=simple,explode=false,name=tenant_id"`
	// Database name to list collections from
	DatabaseName *string `pathParam:"style=simple,explode=false,name=database_name"`
	// Limit for pagination
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Offset for pagination
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
}

func (o *ListCollectionsRequest) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *ListCollectionsRequest) GetDatabaseName() *string {
	if o == nil {
		return nil
	}
	return o.DatabaseName
}

func (o *ListCollectionsRequest) GetLimit() *int {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListCollectionsRequest) GetOffset() *int {
	if o == nil {
		return nil
	}
	return o.Offset
}

type ListCollectionsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// List of collections
	Vec []components.Vec
}

func (o *ListCollectionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListCollectionsResponse) GetVec() []components.Vec {
	if o == nil {
		return nil
	}
	return o.Vec
}
