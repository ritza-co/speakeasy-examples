// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type CollectionCountGlobals struct {
	TenantID     *string `pathParam:"style=simple,explode=false,name=tenant_id"`
	DatabaseName *string `pathParam:"style=simple,explode=false,name=database_name"`
}

func (o *CollectionCountGlobals) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *CollectionCountGlobals) GetDatabaseName() *string {
	if o == nil {
		return nil
	}
	return o.DatabaseName
}

type CollectionCountRequest struct {
	// Tenant ID for the collection
	TenantID *string `pathParam:"style=simple,explode=false,name=tenant_id"`
	// Database containing this collection
	DatabaseName *string `pathParam:"style=simple,explode=false,name=database_name"`
	// Collection ID whose records are counted
	CollectionID string `pathParam:"style=simple,explode=false,name=collection_id"`
}

func (o *CollectionCountRequest) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *CollectionCountRequest) GetDatabaseName() *string {
	if o == nil {
		return nil
	}
	return o.DatabaseName
}

func (o *CollectionCountRequest) GetCollectionID() string {
	if o == nil {
		return ""
	}
	return o.CollectionID
}

type CollectionCountResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Number of records in the collection
	U32 *int
}

func (o *CollectionCountResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CollectionCountResponse) GetU32() *int {
	if o == nil {
		return nil
	}
	return o.U32
}
