// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type CountCollectionsGlobals struct {
	TenantID     *string `pathParam:"style=simple,explode=false,name=tenant_id"`
	DatabaseName *string `pathParam:"style=simple,explode=false,name=database_name"`
}

func (o *CountCollectionsGlobals) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *CountCollectionsGlobals) GetDatabaseName() *string {
	if o == nil {
		return nil
	}
	return o.DatabaseName
}

type CountCollectionsRequest struct {
	// Tenant ID
	TenantID *string `pathParam:"style=simple,explode=false,name=tenant_id"`
	// Database name to count collections from
	DatabaseName *string `pathParam:"style=simple,explode=false,name=database_name"`
}

func (o *CountCollectionsRequest) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *CountCollectionsRequest) GetDatabaseName() *string {
	if o == nil {
		return nil
	}
	return o.DatabaseName
}

type CountCollectionsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Count of collections
	U32 *int
}

func (o *CountCollectionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CountCollectionsResponse) GetU32() *int {
	if o == nil {
		return nil
	}
	return o.U32
}
