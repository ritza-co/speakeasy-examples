/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateCollectionResponse = {};

/** @internal */
export const UpdateCollectionResponse$inboundSchema: z.ZodType<
  UpdateCollectionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UpdateCollectionResponse$Outbound = {};

/** @internal */
export const UpdateCollectionResponse$outboundSchema: z.ZodType<
  UpdateCollectionResponse$Outbound,
  z.ZodTypeDef,
  UpdateCollectionResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCollectionResponse$ {
  /** @deprecated use `UpdateCollectionResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateCollectionResponse$inboundSchema;
  /** @deprecated use `UpdateCollectionResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateCollectionResponse$outboundSchema;
  /** @deprecated use `UpdateCollectionResponse$Outbound` instead. */
  export type Outbound = UpdateCollectionResponse$Outbound;
}

export function updateCollectionResponseToJSON(
  updateCollectionResponse: UpdateCollectionResponse,
): string {
  return JSON.stringify(
    UpdateCollectionResponse$outboundSchema.parse(updateCollectionResponse),
  );
}

export function updateCollectionResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateCollectionResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateCollectionResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateCollectionResponse' from JSON`,
  );
}
