/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteDatabaseResponse = {};

/** @internal */
export const DeleteDatabaseResponse$inboundSchema: z.ZodType<
  DeleteDatabaseResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type DeleteDatabaseResponse$Outbound = {};

/** @internal */
export const DeleteDatabaseResponse$outboundSchema: z.ZodType<
  DeleteDatabaseResponse$Outbound,
  z.ZodTypeDef,
  DeleteDatabaseResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteDatabaseResponse$ {
  /** @deprecated use `DeleteDatabaseResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteDatabaseResponse$inboundSchema;
  /** @deprecated use `DeleteDatabaseResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteDatabaseResponse$outboundSchema;
  /** @deprecated use `DeleteDatabaseResponse$Outbound` instead. */
  export type Outbound = DeleteDatabaseResponse$Outbound;
}

export function deleteDatabaseResponseToJSON(
  deleteDatabaseResponse: DeleteDatabaseResponse,
): string {
  return JSON.stringify(
    DeleteDatabaseResponse$outboundSchema.parse(deleteDatabaseResponse),
  );
}

export function deleteDatabaseResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteDatabaseResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteDatabaseResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteDatabaseResponse' from JSON`,
  );
}
