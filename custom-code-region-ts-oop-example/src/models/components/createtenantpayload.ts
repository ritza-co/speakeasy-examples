/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateTenantPayload = {
  name: string;
};

/** @internal */
export const CreateTenantPayload$inboundSchema: z.ZodType<
  CreateTenantPayload,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type CreateTenantPayload$Outbound = {
  name: string;
};

/** @internal */
export const CreateTenantPayload$outboundSchema: z.ZodType<
  CreateTenantPayload$Outbound,
  z.ZodTypeDef,
  CreateTenantPayload
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTenantPayload$ {
  /** @deprecated use `CreateTenantPayload$inboundSchema` instead. */
  export const inboundSchema = CreateTenantPayload$inboundSchema;
  /** @deprecated use `CreateTenantPayload$outboundSchema` instead. */
  export const outboundSchema = CreateTenantPayload$outboundSchema;
  /** @deprecated use `CreateTenantPayload$Outbound` instead. */
  export type Outbound = CreateTenantPayload$Outbound;
}

export function createTenantPayloadToJSON(
  createTenantPayload: CreateTenantPayload,
): string {
  return JSON.stringify(
    CreateTenantPayload$outboundSchema.parse(createTenantPayload),
  );
}

export function createTenantPayloadFromJSON(
  jsonString: string,
): SafeParseResult<CreateTenantPayload, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTenantPayload$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTenantPayload' from JSON`,
  );
}
