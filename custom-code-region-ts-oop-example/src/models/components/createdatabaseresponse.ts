/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateDatabaseResponse = {};

/** @internal */
export const CreateDatabaseResponse$inboundSchema: z.ZodType<
  CreateDatabaseResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateDatabaseResponse$Outbound = {};

/** @internal */
export const CreateDatabaseResponse$outboundSchema: z.ZodType<
  CreateDatabaseResponse$Outbound,
  z.ZodTypeDef,
  CreateDatabaseResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatabaseResponse$ {
  /** @deprecated use `CreateDatabaseResponse$inboundSchema` instead. */
  export const inboundSchema = CreateDatabaseResponse$inboundSchema;
  /** @deprecated use `CreateDatabaseResponse$outboundSchema` instead. */
  export const outboundSchema = CreateDatabaseResponse$outboundSchema;
  /** @deprecated use `CreateDatabaseResponse$Outbound` instead. */
  export type Outbound = CreateDatabaseResponse$Outbound;
}

export function createDatabaseResponseToJSON(
  createDatabaseResponse: CreateDatabaseResponse,
): string {
  return JSON.stringify(
    CreateDatabaseResponse$outboundSchema.parse(createDatabaseResponse),
  );
}

export function createDatabaseResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatabaseResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatabaseResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatabaseResponse' from JSON`,
  );
}
