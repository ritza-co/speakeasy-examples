/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpsertCollectionRecordsResponse = {};

/** @internal */
export const UpsertCollectionRecordsResponse$inboundSchema: z.ZodType<
  UpsertCollectionRecordsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UpsertCollectionRecordsResponse$Outbound = {};

/** @internal */
export const UpsertCollectionRecordsResponse$outboundSchema: z.ZodType<
  UpsertCollectionRecordsResponse$Outbound,
  z.ZodTypeDef,
  UpsertCollectionRecordsResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpsertCollectionRecordsResponse$ {
  /** @deprecated use `UpsertCollectionRecordsResponse$inboundSchema` instead. */
  export const inboundSchema = UpsertCollectionRecordsResponse$inboundSchema;
  /** @deprecated use `UpsertCollectionRecordsResponse$outboundSchema` instead. */
  export const outboundSchema = UpsertCollectionRecordsResponse$outboundSchema;
  /** @deprecated use `UpsertCollectionRecordsResponse$Outbound` instead. */
  export type Outbound = UpsertCollectionRecordsResponse$Outbound;
}

export function upsertCollectionRecordsResponseToJSON(
  upsertCollectionRecordsResponse: UpsertCollectionRecordsResponse,
): string {
  return JSON.stringify(
    UpsertCollectionRecordsResponse$outboundSchema.parse(
      upsertCollectionRecordsResponse,
    ),
  );
}

export function upsertCollectionRecordsResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpsertCollectionRecordsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpsertCollectionRecordsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpsertCollectionRecordsResponse' from JSON`,
  );
}
