/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AddCollectionRecordsResponse = {};

/** @internal */
export const AddCollectionRecordsResponse$inboundSchema: z.ZodType<
  AddCollectionRecordsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AddCollectionRecordsResponse$Outbound = {};

/** @internal */
export const AddCollectionRecordsResponse$outboundSchema: z.ZodType<
  AddCollectionRecordsResponse$Outbound,
  z.ZodTypeDef,
  AddCollectionRecordsResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddCollectionRecordsResponse$ {
  /** @deprecated use `AddCollectionRecordsResponse$inboundSchema` instead. */
  export const inboundSchema = AddCollectionRecordsResponse$inboundSchema;
  /** @deprecated use `AddCollectionRecordsResponse$outboundSchema` instead. */
  export const outboundSchema = AddCollectionRecordsResponse$outboundSchema;
  /** @deprecated use `AddCollectionRecordsResponse$Outbound` instead. */
  export type Outbound = AddCollectionRecordsResponse$Outbound;
}

export function addCollectionRecordsResponseToJSON(
  addCollectionRecordsResponse: AddCollectionRecordsResponse,
): string {
  return JSON.stringify(
    AddCollectionRecordsResponse$outboundSchema.parse(
      addCollectionRecordsResponse,
    ),
  );
}

export function addCollectionRecordsResponseFromJSON(
  jsonString: string,
): SafeParseResult<AddCollectionRecordsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AddCollectionRecordsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AddCollectionRecordsResponse' from JSON`,
  );
}
