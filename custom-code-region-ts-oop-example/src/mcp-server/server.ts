/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { APICore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { MCPScope, mcpScopes } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$authGetIdentity } from "./tools/authGetIdentity.js";
import { tool$collectionsAdd } from "./tools/collectionsAdd.js";
import { tool$collectionsCount } from "./tools/collectionsCount.js";
import { tool$collectionsCountRecords } from "./tools/collectionsCountRecords.js";
import { tool$collectionsCreate } from "./tools/collectionsCreate.js";
import { tool$collectionsDelete } from "./tools/collectionsDelete.js";
import { tool$collectionsDeleteRecords } from "./tools/collectionsDeleteRecords.js";
import { tool$collectionsGet } from "./tools/collectionsGet.js";
import { tool$collectionsList } from "./tools/collectionsList.js";
import { tool$collectionsQuery } from "./tools/collectionsQuery.js";
import { tool$collectionsRetrieveRecords } from "./tools/collectionsRetrieveRecords.js";
import { tool$collectionsUpdate } from "./tools/collectionsUpdate.js";
import { tool$collectionsUpdateById } from "./tools/collectionsUpdateById.js";
import { tool$collectionsUpsert } from "./tools/collectionsUpsert.js";
import { tool$databasesCreate } from "./tools/databasesCreate.js";
import { tool$databasesDelete } from "./tools/databasesDelete.js";
import { tool$databasesGet } from "./tools/databasesGet.js";
import { tool$databasesList } from "./tools/databasesList.js";
import { tool$systemGetHealthcheck } from "./tools/systemGetHealthcheck.js";
import { tool$systemGetHeartbeat } from "./tools/systemGetHeartbeat.js";
import { tool$systemGetPreFlightChecks } from "./tools/systemGetPreFlightChecks.js";
import { tool$systemGetVersion } from "./tools/systemGetVersion.js";
import { tool$systemReset } from "./tools/systemReset.js";
import { tool$tenantsCreate } from "./tools/tenantsCreate.js";
import { tool$tenantsGet } from "./tools/tenantsGet.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  apiKey?: SDKOptions["apiKey"] | undefined;
  tenant?: SDKOptions["tenant"] | undefined;
  tenantId?: SDKOptions["tenantId"] | undefined;
  databaseName?: SDKOptions["databaseName"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "API",
    version: "0.12.0",
  });

  const client = new APICore({
    apiKey: deps.apiKey,
    tenant: deps.tenant,
    tenantId: deps.tenantId,
    databaseName: deps.databaseName,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });
  const scopes = new Set(deps.scopes ?? mcpScopes);
  const tool = createRegisterTool(deps.logger, server, client, scopes);

  tool(tool$authGetIdentity);
  tool(tool$systemGetHealthcheck);
  tool(tool$systemGetHeartbeat);
  tool(tool$systemGetPreFlightChecks);
  tool(tool$systemReset);
  tool(tool$systemGetVersion);
  tool(tool$tenantsCreate);
  tool(tool$tenantsGet);
  tool(tool$databasesList);
  tool(tool$databasesCreate);
  tool(tool$databasesGet);
  tool(tool$databasesDelete);
  tool(tool$collectionsList);
  tool(tool$collectionsCreate);
  tool(tool$collectionsGet);
  tool(tool$collectionsUpdate);
  tool(tool$collectionsDelete);
  tool(tool$collectionsCountRecords);
  tool(tool$collectionsRetrieveRecords);
  tool(tool$collectionsQuery);
  tool(tool$collectionsCount);
  tool(tool$collectionsAdd);
  tool(tool$collectionsDeleteRecords);
  tool(tool$collectionsUpdateById);
  tool(tool$collectionsUpsert);

  return server;
}
