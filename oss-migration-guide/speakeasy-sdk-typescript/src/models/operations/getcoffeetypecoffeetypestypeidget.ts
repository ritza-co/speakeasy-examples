/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetCoffeeTypeCoffeeTypesTypeIdGetRequest = {
  typeId: number;
};

/** @internal */
export const GetCoffeeTypeCoffeeTypesTypeIdGetRequest$inboundSchema: z.ZodType<
  GetCoffeeTypeCoffeeTypesTypeIdGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  type_id: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "type_id": "typeId",
  });
});

/** @internal */
export type GetCoffeeTypeCoffeeTypesTypeIdGetRequest$Outbound = {
  type_id: number;
};

/** @internal */
export const GetCoffeeTypeCoffeeTypesTypeIdGetRequest$outboundSchema: z.ZodType<
  GetCoffeeTypeCoffeeTypesTypeIdGetRequest$Outbound,
  z.ZodTypeDef,
  GetCoffeeTypeCoffeeTypesTypeIdGetRequest
> = z.object({
  typeId: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    typeId: "type_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCoffeeTypeCoffeeTypesTypeIdGetRequest$ {
  /** @deprecated use `GetCoffeeTypeCoffeeTypesTypeIdGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetCoffeeTypeCoffeeTypesTypeIdGetRequest$inboundSchema;
  /** @deprecated use `GetCoffeeTypeCoffeeTypesTypeIdGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetCoffeeTypeCoffeeTypesTypeIdGetRequest$outboundSchema;
  /** @deprecated use `GetCoffeeTypeCoffeeTypesTypeIdGetRequest$Outbound` instead. */
  export type Outbound = GetCoffeeTypeCoffeeTypesTypeIdGetRequest$Outbound;
}

export function getCoffeeTypeCoffeeTypesTypeIdGetRequestToJSON(
  getCoffeeTypeCoffeeTypesTypeIdGetRequest:
    GetCoffeeTypeCoffeeTypesTypeIdGetRequest,
): string {
  return JSON.stringify(
    GetCoffeeTypeCoffeeTypesTypeIdGetRequest$outboundSchema.parse(
      getCoffeeTypeCoffeeTypesTypeIdGetRequest,
    ),
  );
}

export function getCoffeeTypeCoffeeTypesTypeIdGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetCoffeeTypeCoffeeTypesTypeIdGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetCoffeeTypeCoffeeTypesTypeIdGetRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetCoffeeTypeCoffeeTypesTypeIdGetRequest' from JSON`,
  );
}
