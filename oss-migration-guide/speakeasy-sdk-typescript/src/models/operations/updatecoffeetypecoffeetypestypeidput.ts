/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest = {
  typeId: number;
  coffeeType: components.CoffeeType;
};

/** @internal */
export const UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$inboundSchema:
  z.ZodType<
    UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type_id: z.number().int(),
    CoffeeType: components.CoffeeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "type_id": "typeId",
      "CoffeeType": "coffeeType",
    });
  });

/** @internal */
export type UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$Outbound = {
  type_id: number;
  CoffeeType: components.CoffeeType$Outbound;
};

/** @internal */
export const UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$outboundSchema:
  z.ZodType<
    UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$Outbound,
    z.ZodTypeDef,
    UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest
  > = z.object({
    typeId: z.number().int(),
    coffeeType: components.CoffeeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      typeId: "type_id",
      coffeeType: "CoffeeType",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$ {
  /** @deprecated use `UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$inboundSchema` instead. */
  export const inboundSchema =
    UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$inboundSchema;
  /** @deprecated use `UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$outboundSchema;
  /** @deprecated use `UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$Outbound` instead. */
  export type Outbound = UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$Outbound;
}

export function updateCoffeeTypeCoffeeTypesTypeIdPutRequestToJSON(
  updateCoffeeTypeCoffeeTypesTypeIdPutRequest:
    UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest,
): string {
  return JSON.stringify(
    UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$outboundSchema.parse(
      updateCoffeeTypeCoffeeTypesTypeIdPutRequest,
    ),
  );
}

export function updateCoffeeTypeCoffeeTypesTypeIdPutRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateCoffeeTypeCoffeeTypesTypeIdPutRequest' from JSON`,
  );
}
