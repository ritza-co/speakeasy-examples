/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetOrderOrdersOrderIdGetRequest = {
  orderId: number;
};

/** @internal */
export const GetOrderOrdersOrderIdGetRequest$inboundSchema: z.ZodType<
  GetOrderOrdersOrderIdGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  order_id: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "order_id": "orderId",
  });
});

/** @internal */
export type GetOrderOrdersOrderIdGetRequest$Outbound = {
  order_id: number;
};

/** @internal */
export const GetOrderOrdersOrderIdGetRequest$outboundSchema: z.ZodType<
  GetOrderOrdersOrderIdGetRequest$Outbound,
  z.ZodTypeDef,
  GetOrderOrdersOrderIdGetRequest
> = z.object({
  orderId: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    orderId: "order_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrderOrdersOrderIdGetRequest$ {
  /** @deprecated use `GetOrderOrdersOrderIdGetRequest$inboundSchema` instead. */
  export const inboundSchema = GetOrderOrdersOrderIdGetRequest$inboundSchema;
  /** @deprecated use `GetOrderOrdersOrderIdGetRequest$outboundSchema` instead. */
  export const outboundSchema = GetOrderOrdersOrderIdGetRequest$outboundSchema;
  /** @deprecated use `GetOrderOrdersOrderIdGetRequest$Outbound` instead. */
  export type Outbound = GetOrderOrdersOrderIdGetRequest$Outbound;
}

export function getOrderOrdersOrderIdGetRequestToJSON(
  getOrderOrdersOrderIdGetRequest: GetOrderOrdersOrderIdGetRequest,
): string {
  return JSON.stringify(
    GetOrderOrdersOrderIdGetRequest$outboundSchema.parse(
      getOrderOrdersOrderIdGetRequest,
    ),
  );
}

export function getOrderOrdersOrderIdGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetOrderOrdersOrderIdGetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOrderOrdersOrderIdGetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOrderOrdersOrderIdGetRequest' from JSON`,
  );
}
