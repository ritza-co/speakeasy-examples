/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest = {
  typeId: number;
};

/** @internal */
export const DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$inboundSchema:
  z.ZodType<
    DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type_id: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      "type_id": "typeId",
    });
  });

/** @internal */
export type DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$Outbound = {
  type_id: number;
};

/** @internal */
export const DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$outboundSchema:
  z.ZodType<
    DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$Outbound,
    z.ZodTypeDef,
    DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest
  > = z.object({
    typeId: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      typeId: "type_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$ {
  /** @deprecated use `DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$inboundSchema;
  /** @deprecated use `DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$outboundSchema;
  /** @deprecated use `DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$Outbound` instead. */
  export type Outbound =
    DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$Outbound;
}

export function deleteCoffeeTypeCoffeeTypesTypeIdDeleteRequestToJSON(
  deleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest:
    DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest,
): string {
  return JSON.stringify(
    DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$outboundSchema.parse(
      deleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest,
    ),
  );
}

export function deleteCoffeeTypeCoffeeTypesTypeIdDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteCoffeeTypeCoffeeTypesTypeIdDeleteRequest' from JSON`,
  );
}
