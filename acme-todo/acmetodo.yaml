openapi: 3.1.0
info:
  title: Simple Todo API
  description: A RESTful API for managing todo items with basic CRUD operations
  version: 1.0.0
servers:
  - url: https://your-ngrok-url.ngrok.io
tags:
  - name: Todos
paths:
  /todos:
    get:
      operationId: listTodos
      summary: List all todos
      tags:
        - Todos
      responses:
        '200':
          description: A JSON array of todo items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      operationId: createTodo
      summary: Create a new todo
      tags:
        - Todos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTodo'
      responses:
        '201':
          description: The created todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
  /todos/{id}:
    parameters:
      - $ref: '#/components/parameters/todoId'
    get:
      operationId: getTodo
      summary: Retrieve a todo
      tags:
        - Todos
      responses:
        '200':
          description: A todo item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
    put:
      operationId: replaceTodo
      summary: Replace a todo
      tags:
        - Todos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTodo'
      responses:
        '200':
          description: The updated todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
    patch:
      operationId: updateTodo
      summary: Update a todo
      tags:
        - Todos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoUpdate'
      responses:
        '200':
          description: The updated todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
    delete:
      operationId: deleteTodo
      summary: Delete a todo
      tags:
        - Todos
      responses:
        '204':
          description: Todo deleted
        '404':
          description: Todo not found
components:
  parameters:
    todoId:
      name: id
      in: path
      description: The id of the todo
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 1
        title:
          type: string
          example: Buy milk
        completed:
          type: boolean
          default: false
        dueDate:
          type: string
          format: date
          nullable: true
      required:
        - id
        - title
        - completed
    NewTodo:
      type: object
      properties:
        title:
          type: string
          example: Buy milk
        completed:
          type: boolean
          default: false
        dueDate:
          type: string
          format: date
          nullable: true
      required:
        - title
    TodoUpdate:
      type: object
      properties:
        title:
          type: string
          example: Buy bread
        completed:
          type: boolean
        dueDate:
          type: string
          format: date
          nullable: true
      additionalProperties: false
