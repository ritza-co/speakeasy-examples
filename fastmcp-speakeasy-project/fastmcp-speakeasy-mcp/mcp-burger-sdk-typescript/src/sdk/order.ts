/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { orderCreateOrder } from "../funcs/orderCreateOrder.js";
import { orderListOrders } from "../funcs/orderListOrders.js";
import { orderReadOrder } from "../funcs/orderReadOrder.js";
import { orderUpdateOrder } from "../funcs/orderUpdateOrder.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Order extends ClientSDK {
  /**
   * List Orders
   *
   * @remarks
   * List all orders
   */
  async listOrders(
    options?: RequestOptions,
  ): Promise<Array<models.OrderOutput>> {
    return unwrapAsync(orderListOrders(
      this,
      options,
    ));
  }

  /**
   * Create Order
   *
   * @remarks
   * Create an order
   */
  async createOrder(
    request: models.OrderCreate,
    options?: RequestOptions,
  ): Promise<models.OrderOutput> {
    return unwrapAsync(orderCreateOrder(
      this,
      request,
      options,
    ));
  }

  /**
   * Read Order
   *
   * @remarks
   * Read an order
   */
  async readOrder(
    request: operations.ReadOrderRequest,
    options?: RequestOptions,
  ): Promise<models.OrderOutput> {
    return unwrapAsync(orderReadOrder(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Order
   *
   * @remarks
   * Update an order
   */
  async updateOrder(
    request: operations.UpdateOrderRequest,
    options?: RequestOptions,
  ): Promise<models.OrderOutput> {
    return unwrapAsync(orderUpdateOrder(
      this,
      request,
      options,
    ));
  }
}
