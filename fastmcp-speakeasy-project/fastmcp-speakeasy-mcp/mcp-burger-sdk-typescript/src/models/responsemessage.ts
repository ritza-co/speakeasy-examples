/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * A response message
 */
export type ResponseMessage = {
  /**
   * The response message
   */
  message: string;
};

/** @internal */
export const ResponseMessage$inboundSchema: z.ZodType<
  ResponseMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type ResponseMessage$Outbound = {
  message: string;
};

/** @internal */
export const ResponseMessage$outboundSchema: z.ZodType<
  ResponseMessage$Outbound,
  z.ZodTypeDef,
  ResponseMessage
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseMessage$ {
  /** @deprecated use `ResponseMessage$inboundSchema` instead. */
  export const inboundSchema = ResponseMessage$inboundSchema;
  /** @deprecated use `ResponseMessage$outboundSchema` instead. */
  export const outboundSchema = ResponseMessage$outboundSchema;
  /** @deprecated use `ResponseMessage$Outbound` instead. */
  export type Outbound = ResponseMessage$Outbound;
}

export function responseMessageToJSON(
  responseMessage: ResponseMessage,
): string {
  return JSON.stringify(ResponseMessage$outboundSchema.parse(responseMessage));
}

export function responseMessageFromJSON(
  jsonString: string,
): SafeParseResult<ResponseMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseMessage' from JSON`,
  );
}
